
Git commit:
===========
1. start-ssh-agent.cmd
2. git@github.com:suba-learning/TestRepository1.git
3. Notepad firstfile.txt
4. git status
5. git add firstfile.txt
6. git status
7. git commit -m "my very first commit"
8. git config --global user.email "ksuba.learning@gmail.com"
9. git config --global user.name "Suba Narayanan"
10. git commit -m "my very first commit"
11. git status
12. git push origin main


Branching:
==========
1. Branches are way to keep codes sepearte until they are ready to be merged with main.
2. Teammates will review branch code and merge to main
3. Command to create new brnach>git branch my-first-branch 
4. Better command is to create new branch and then switch to new branch: git checkout -b my-first-branch
5. git status: will show all the files from main
6. get list of all branches: git branch -av
   C:\Users\kpkan\Documents\TestRepository1>git branch -av
  main                eac3f4b my very first commit
* my-first-branch     eac3f4b my very first commit +++++++++++++++++++++++> * indicates current branch
  remotes/origin/HEAD -> origin/main
  remotes/origin/main eac3f4b my very first commit
7. command to switch to main> git checkout main 
8. C:\Users\kpkan\Documents\TestRepository1>git branch -av
 * main                eac3f4b my very first commit +++++++++++++++++++++++> * indicates current branch
  my-first-branch     eac3f4b my very first commit
  remotes/origin/HEAD -> origin/main
  remotes/origin/main eac3f4b my very first commit
9. Command to delete new branch>git branch -d my-first-branch
10.  C:\Users\kpkan\Documents\TestRepository1>git branch -av
 * main                eac3f4b my very first commit
  remotes/origin/HEAD -> origin/main
  remotes/origin/main eac3f4b my very first commit

Push Branch to GitRepo:
=======================
1. >git checkout -b my-first-branch
2. > notepad mysecondfile.txt
3. >git status
4. >git add mysecondfile.txt
5. >git status
6. >git commit -m "adding file to my branch"
7. >git push origin my-first-branch
8. Github would show my-first-branch had recent pushes 1 minute ago
9. Main has two files
10. my-first-branch has one file

Pull Requests:
=============

1. Goto new branch
2. There will be message: This branch is 1 commit ahead of main.
3. Click on the 1 commit ahead link
4. This will list the changes made( adding new file or lines changed..)
5. Click on create pull request button
6. Add Description
7. Click on Create pull request in the bottom
8. Click on Merge pull request
9. Click on Confirm Merge
10. Click on Delete Branch



Pull request for someother's repository
========================================


Undo Staging and undo commiting
================================
1. git pull origin main
2. git status
3. git checkout -b my-second-brnach
4. edit mysecondfile.txt
5. git status -- This will show the second file in red color as modified
6. >git add mysecondfile.txt
7. git status
8. To unstage and make more modification> git reset
9. make edits to mysecondfile
10.  >git add mysecondfile.txt
11. Then commit> git commit -m "This file I want to edit again"
12.To uncommit> git reset --soft HEAD~1


git Stash
=========
 To temporarily remove your changes
1. git pull origin main
2. git status
3. git checkout -b my-second-brnach
4. edit mysecondfile.txt
5. git status -- This will show the second file in red color as modified
6. >git add mysecondfile.txt
7. git status
8. git stash
9. view mysecondfile.txt: Edited chages will not be there
10. To bring back changes> git stash apply


Merge Conflict
==============





Git commands
============
1. Git clone
2. git status
3. git add
4. git commit -m "msg"
5. git push origin main
6. git checkout -b <branchname>
7. git checkout main
8. git branch -av
9. git branch -d <branchname>
10. git push origin <branchname>
11. git pull origin main
12. git pull origin <branchname>
13. git reset
14. git reset --soft HEAD~1
15. git stash
16. git stash apply